1---
ints =: i.1000
+/ ints * (0 = 3 | ints) +. (0 = 5 | ints)

?2---
fib=: (0 1,:1 1)&(+/ .*)@[&0 & 0 1 NB. IDK how this works it is in Voc for Bond
+/((0=2&|)#[)(1&{)"1 fib i.34

3---
>./q:600851475143

4---
nums=:100+i.899
strs=:":"0,/nums*/nums
>./".((<"1 strs)=<"1|."1 strs)#strs
NB. get the bit map for reverse strings equalling strings, pick out the palindrome strings, convert to nums, find max

5---
*./1+i.20

6---
(*:+/1+i.100)-+/*:1+i.100

7---
p:10000

8---
num =: 7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450x
>./*/"1"."0({&(":num))(+&(i.13))"0 i.988
NB. get all 13 digit sequences from stringified, convert to nums, find products, find max
NB. could it be done without bonding?

9---
nums=:1+i.997
combos=:,/nums(,"0/)nums
combos=:([ , (1000-+/))"1 combos NB. calculate c from c = 1000 - (a + b) and append c to the combo
combos=:(0<2{"1 combos)#combos NB. filter out nonnaturals
*/{.(((2&{)=((0&{)+(1&{)))*:|:combos)#combos NB. create a bitmap of the ones that are pythagorean triplets then take the first (there are 2 since we have abc bac)

10---
+/p:i.148933